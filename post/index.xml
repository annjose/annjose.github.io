<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Reflections</title>
    <link>http://ann.chiramattel.com/post/</link>
    <description>Recent content in Posts on Reflections</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Fri, 15 Apr 2016 21:22:02 -0700</lastBuildDate>
    <atom:link href="http://ann.chiramattel.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ReactNative in Visual Studio Code</title>
      <link>http://ann.chiramattel.com/post/react-native-visual-studio-code/</link>
      <pubDate>Fri, 15 Apr 2016 21:22:02 -0700</pubDate>
      
      <guid>http://ann.chiramattel.com/post/react-native-visual-studio-code/</guid>
      <description>&lt;p&gt;I have been thoroughly enjoying &lt;a href=&#34;https://facebook.github.io/react-native/&#34;&gt;ReactNative&lt;/a&gt; has been enjoyable except for the lack of a comprehensive debugging environment. I had tried multiple solutions like &lt;a href=&#34;http://nuclide.io/&#34;&gt;Nuclide&lt;/a&gt; (which I found it to be very slow), WebStorm with JSX plugins (which is not a debugging environment). So I had to go back and forth between Xcode, Android Studio and Chrome Dev Tools. This was frustrating, but there is hope&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.reactnative.com/react-native-tools-extension-for-visual-studio-code/&#34;&gt;ReactJS conference in February&lt;/a&gt; announced the release of ReactNative extension for &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VisualStudio Code&lt;/a&gt;, the lightweight editor by Microsoft. The name &amp;lsquo;Visual Studio&amp;rsquo; may sound heavy, but this is a completely new editor built from ground-up based on Electron. It is very flexible, configurable, super fast and Open Source too! The &lt;a href=&#34;https://github.com/Microsoft/vscode-react-native&#34;&gt;ReactNative extension for VS Code&lt;/a&gt; supports intellisense, ability to run react-native commands and most importantly, full-fledged debugging experience - yeah yeah breakpoints, callstack and stuff :-)&lt;/p&gt;

&lt;p&gt;I tried to code the &lt;a href=&#34;https://www.raywenderlich.com/126063/react-native-tutorial&#34;&gt;Ray Wenderlich ReactNative tutorial&lt;/a&gt; using this extension and it was absolutely brilliant. The UI is very clean, clutter-free with subtle yet vivid colors. As soon as I opened the starter project, it recognized that it is a ReactNative project and got it ready to go. Then I could simply put a breakpoint and hit the Debug Run button and Viola, the app started and the breakpoint was hit. Now I am debugging my code all in one single place!&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://ann.chiramattel.com/img/ReactNativeInVSCode.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;ReactNative extension in VS Code&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Conversation As Interface</title>
      <link>http://ann.chiramattel.com/post/conversation-as-interface/</link>
      <pubDate>Fri, 08 Apr 2016 20:47:54 -0700</pubDate>
      
      <guid>http://ann.chiramattel.com/post/conversation-as-interface/</guid>
      <description>&lt;p&gt;The User Interface is going beyond UI and voice recognition to the new trend of using conversation as a new way to engage with customers, i.e. &lt;strong&gt;Conversation As Interface&lt;/strong&gt;. It is a more natural form of communication, especially for question-answer / interview experiences.&lt;/p&gt;

&lt;p&gt;Now there is an emerging trend of companies opening their chat bot API to third party developers. Facebook &lt;a href=&#34;http://techcrunch.com/2016/01/05/facebook-messenger-bots/&#34;&gt;has been doing experiments&lt;/a&gt; in their Messenger app allowing a few developers like Uber, Assist etc. to create chat bots. They are &lt;a href=&#34;http://techcrunch.com/2016/04/07/facebook-chatbots/&#34;&gt;expected to announce&lt;/a&gt; opening up the SDK to all in next week’s F8 conference. Microsoft &lt;a href=&#34;http://techcrunch.com/2016/03/30/microsoft-is-bringing-bots-to-skype-and-everywhere-else/&#34;&gt;released a Bot Framework&lt;/a&gt; in Build last week and this supports multiple channels – Slack, SMS, Skype etc. Similarly, &lt;a href=&#34;http://techcrunch.com/2016/03/24/line-builds-out-its-chat-app-for-businesses-as-facebook-messenger-threat-looms-large/&#34;&gt;Line&lt;/a&gt; announced its SDK.&lt;/p&gt;

&lt;p&gt;Chat bots could be a new way to reach customers even when the app is not installed. And if they support deep linking, then developers can deliver a smooth transition into sepcific flows in the app. This is a great opportunity to be where our users are. It will be interesting to see how this idea pans out.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ann.chiramattel.com/img/bot-framework.png&#34; alt=&#34;Bot Framework&#34; title=&#34;Bots&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First Post from Hugo</title>
      <link>http://ann.chiramattel.com/post/first-post-from-hugo/</link>
      <pubDate>Mon, 27 Apr 2015 00:49:45 -0700</pubDate>
      
      <guid>http://ann.chiramattel.com/post/first-post-from-hugo/</guid>
      <description>&lt;p&gt;This is my first blog post created by &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;, a simple, fast and powerful blogging engine written in Go. Setting up my blog on Hugo was quick and easy; it took less than 4 hours.&lt;/p&gt;

&lt;p&gt;I have set this up such that I publish the content to &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub pages&lt;/a&gt;, so the publish workflow is as simple as writing some Markdown and a git push. &lt;a href=&#34;http://gohugo.io/tutorials/github-pages-blog/&#34;&gt;This is a good tutorial&lt;/a&gt; on how to do this.&lt;/p&gt;

&lt;p&gt;Here is what I love about Hugo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Static content generation, which means blazing fast rendering, no need to manage databases, VMs etc.&lt;/li&gt;
&lt;li&gt;Very easy to publish content - create content in markdown and simple git push&lt;/li&gt;
&lt;li&gt;No dependency issues; literally runs out of the box&lt;/li&gt;
&lt;li&gt;Highly customizable UI&lt;/li&gt;
&lt;li&gt;A good opportunity to learn &lt;a href=&#34;https://golang.org/&#34;&gt;Go language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So far, I am just loving Hugo. Next step is to explore it further and customize it to my heart&amp;rsquo;s content.
    &lt;img src=&#34;http://ann.chiramattel.com/img/hugo.png&#34; alt=&#34;Hugo&#34; title=&#34;Hugo&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>