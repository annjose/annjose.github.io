<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>visual-studio-code on Reflections</title>
    <link>https://ann.chiramattel.com/topics/visual-studio-code/</link>
    <description>Recent content in visual-studio-code on Reflections</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2020. All rights reserved.</copyright>
    <lastBuildDate>Mon, 29 Jun 2020 22:32:55 -0700</lastBuildDate>
    
	<atom:link href="https://ann.chiramattel.com/topics/visual-studio-code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tinkering with VS Code, MacOS and C&#43;&#43;</title>
      <link>https://ann.chiramattel.com/post/vscode-macos-cpp/</link>
      <pubDate>Mon, 29 Jun 2020 22:32:55 -0700</pubDate>
      
      <guid>https://ann.chiramattel.com/post/vscode-macos-cpp/</guid>
      <description>After a long time, I got the time to tinker with something fun and learn from it, thanks to the week-long break from work. The task at hand is to set up Visual Studio for Mac to compile/run/debug C++ programs. Why, you may wonder - for the past few months, I have been craving to learn something different and I was hooked when I saw the book Data Structures and Algorithms in C++ by Adam Drozdek.</description>
    </item>
    
    <item>
      <title>ReactNative in Visual Studio Code</title>
      <link>https://ann.chiramattel.com/post/react-native-visual-studio-code/</link>
      <pubDate>Wed, 13 Apr 2016 21:22:02 -0700</pubDate>
      
      <guid>https://ann.chiramattel.com/post/react-native-visual-studio-code/</guid>
      <description>I have been thoroughly enjoying working on ReactNative projects, but was disappointed by the lack of a good debugging environment. I had tried multiple solutions like Nuclide (which I found it to be very slow), WebStorm with JSX plugins (which is mainly syntax recognition). So I had to always launch the app from Xcode/Android Studio, then attach Chrome Dev tools and keep switching between all three for debugging. This was frustrating, but there is hope&amp;hellip;</description>
    </item>
    
  </channel>
</rss>